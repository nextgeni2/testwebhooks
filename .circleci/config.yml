version: 2.1

orbs:
  android: circleci/android@2.5.0
  slack: circleci/slack@4.13.1

jobs:
  # Job to build Stage APK
  build-stage:
    docker:
      - image: cimg/android:2024.01-ndk
    steps:
      - checkout
      - android/restore-gradle-cache
      - run:
          name: Create local.properties
          command: touch local.properties
      - run:
          name: Create releaseNotes.txt
          command: touch releaseNotes.txt
      - run:
          name: Create a file in the main package
          command: |
            mkdir -p data/src/main/cpp/
            echo $DATA_CPP_FILE | base64 --decode > data/src/main/cpp/data.cpp
      - run:
          name: Store Google Services Account
          command: echo $GOOGLE_SERVICES_ACCOUNT | base64 -d > services.json
      - run:
          name: Export Commit
          command: echo "export GIT_COMMIT_MESSAGE=\"$(git log --format=%B -n 1 $CIRCLE_SHA1)\"" >> $BASH_ENV
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      - run:
          name: Save Commit In Release Notes
          command: echo $GIT_COMMIT_MESSAGE > releaseNotes.txt
      - run:
          name: Build Stage Debug APK
          command: ./gradlew assembleStageDebug --no-daemon --max-workers 2
      - run:
          name: Upload Stage Debug APK to Firebase
          command: ./gradlew appDistributionUploadStageDebug --no-daemon --max-workers 2
      - android/save-gradle-cache


  # Job to build Dev APK
  build-dev:
    docker:
      - image: cimg/android:2024.01-ndk
    steps:
      - checkout
      - android/restore-gradle-cache
      - run:
          name: Create local.properties
          command: touch local.properties
      - run:
          name: Create releaseNotes.txt
          command: touch releaseNotes.txt
      - run:
          name: Create a file in the main package
          command: |
            mkdir -p data/src/main/cpp/
            echo $DATA_CPP_FILE | base64 --decode > data/src/main/cpp/data.cpp
      - run:
          name: Store Google Services Account
          command: echo $GOOGLE_SERVICES_ACCOUNT | base64 -d > services.json
      - run:
          name: Export Commit
          command: echo "export GIT_COMMIT_MESSAGE=\"$(git log --format=%B -n 1 $CIRCLE_SHA1)\"" >> $BASH_ENV
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      - run:
          name: Save Commit In Release Notes
          command: echo $GIT_COMMIT_MESSAGE > releaseNotes.txt
      - run:
          name: Build Dev Debug APK
          command: ./gradlew assembleDevDebug --no-daemon --max-workers 2
      - run:
          name: Upload Dev Debug APK to Firebase
          command: ./gradlew appDistributionUploadDevDebug --no-daemon --max-workers 2


  # A shared job that will post Slack notifications after successful deployment
  notify-slack:
    docker:
      - image: cimg/android:2024.01-ndk
    steps:
      - checkout
      - run:
            name: Export Commit
            command: echo "export GIT_COMMIT_MESSAGE=\"$(git log --format=%B -n 1 $CIRCLE_SHA1)\"" >> $BASH_ENV
      - slack/notify:
          custom: |
            {
               "blocks": [
                 {
                   "type": "section",
                   "text": {
                     "type": "plain_text",
                     "text": "Zofeur Deployment Successful :tada:",
                     "emoji": true
                   }
                 },
                 {
                   "type": "header",
                   "text": {
                     "type": "plain_text",
                     "text": "Release notes",
                     "emoji": true
                   }
                 },
                 {
                   "type": "section",
                   "text": {
                     "type": "plain_text",
                     "text": "*Release contains* $GIT_COMMIT_MESSAGE",
                     "emoji": true
                   }
                 },
                 {
                   "type": "section",
                   "text": {
                     "type": "mrkdwn",
                     "text": "Download Build from Firebase."
                   },
                   "accessory": {
                     "type": "button",
                     "text": {
                       "type": "plain_text",
                       "text": "Download",
                       "emoji": true
                     },
                     "value": "click_me_123",
                     "url": "https://appdistribution.firebase.dev/i/51a009a32bc58e82",
                     "action_id": "button-action"
                   }
                 }
               ]
             }
          channel: $SLACK_DEFAULT_CHANNEL
          event: pass
          ignore_errors: true
          mentions: '@Channel'

workflows:
  # Workflow to run the build and upload tasks in parallel
  parallel-deploy:
    jobs:
      - build-stage:
          filters:
            branches:
              only:
                - master
                - staging/releases
                - /^release\/v.*$/
                - feature/cicd
                - black/sprint20/develop_fix
                - Sprint_19/revamp/dev
                - Sprint_23/dev
                - Sprint_19/revamp/trip_status
      - build-dev:
          filters:
            branches:
              only:
                - master
                - staging/releases
                - /^release\/v.*$/
                - feature/cicd
                - black/sprint20/develop_fix
                - Sprint_19/revamp/dev
                - Sprint_23/dev
                - Sprint_19/revamp/trip_status
      - notify-slack:
          requires:
            - build-stage
            - build-dev
          context:
            - slack-secrets
